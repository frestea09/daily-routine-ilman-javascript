1. Deklarasi Fungsi:
javascript
Copy code
function namaFungsi(parameter1, parameter2) {
  // Blok kode fungsi
  // ...
  return hasil;
}

// Memanggil fungsi
const hasil = namaFungsi(nilai1, nilai2);
2. Ekspresi Fungsi:
javascript
Copy code
const namaFungsi = function(parameter1, parameter2) {
  // Blok kode fungsi
  // ...
  return hasil;
};

// Memanggil fungsi
const hasil = namaFungsi(nilai1, nilai2);
3. Fungsi Panjang Variabel:
javascript
Copy code
const namaFungsi = (parameter1, parameter2) => {
  // Blok kode fungsi
  // ...
  return hasil;
};

// Memanggil fungsi
const hasil = namaFungsi(nilai1, nilai2);
4. Fungsi Tanpa Parameter:
javascript
Copy code
function fungsiTanpaParameter() {
  // Blok kode fungsi tanpa parameter
  // ...
}

// Memanggil fungsi tanpa parameter
fungsiTanpaParameter();
5. Fungsi dengan Nilai Default Parameter (ES6+):
javascript
Copy code
function fungsiDenganDefaultParameter(parameter1 = nilaiDefault1, parameter2 = nilaiDefault2) {
  // Blok kode fungsi dengan nilai default parameter
  // ...
}

// Memanggil fungsi dengan nilai default parameter
fungsiDenganDefaultParameter(nilai1, nilai2);
6. Fungsi sebagai Parameter Fungsi Lain (Callback):
javascript
Copy code
function fungsiPertama(callback) {
  // Blok kode fungsi pertama
  // ...
  callback();
}

function fungsiKedua() {
  // Blok kode fungsi kedua
  // ...
}

// Memanggil fungsi pertama dengan fungsi kedua sebagai callback
fungsiPertama(fungsiKedua);
7. Fungsi Arrow (ES6+):
javascript
Copy code
const namaFungsi = (parameter1, parameter2) => {
  // Blok kode fungsi
  // ...
  return hasil;
};

// Memanggil fungsi
const hasil = namaFungsi(nilai1, nilai2);
Penting untuk memahami bahwa fungsi dapat mengembalikan nilai dengan menggunakan pernyataan return. Selain itu, fungsi juga dapat digunakan sebagai parameter untuk fungsi lain, yang dikenal sebagai callback. Pilihan antara deklarasi dan ekspresi fungsi atau antara fungsi konvensional dan arrow tergantung pada kebutuhan dan preferensi Anda. Fungsi juga dapat memiliki parameter default untuk memberikan nilai default jika parameter tidak disediakan saat pemanggilan.

// optimalisasi 
rubah input menjadi object jika lebih dari 1

#training 
const item = () => {
  console.log("hello world");
};

item();
const getAddition = (inputBilanganPertama, inputBilanganKedua) =>
  inputBilanganPertama + inputBilanganKedua;

const resultAddition = getAddition(1, 2);
console.log({ resultAddition });

const getArray = () => ({ one: 1 });
const resultArray = getArray();
console.log(resultArray);

const getObject = ({ bilanganSatu = 0, bilanganDua = 0 }) =>
  bilanganSatu + bilanganDua;

const resultObject = getObject({ bilanganSatu: 1, bilanganDua: 2 });
console.log(resultObject);